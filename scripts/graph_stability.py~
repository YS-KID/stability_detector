#!/usr/bin/env python
# -*- coding: utf-8 -*-
import numpy as np
import rospy
import matplotlib.pyplot as plt

from std_msgs.msg import Float32
from stability_detector_msgs.srv import JobState, JobStateResponse, JobStateRequest

class graph_stability():

    stability_list = [0.0]

    def __init__(self):
        rospy.init_node("graph_stability", anonymous = True)
        # rospy.Subscriber("/donbe_stability_detector/output/stability", Float32, self.subscribe)
        rospy.Timer(rospy.Duration(1), self.graph)
        self.job_state = rospy.ServiceProxy("/jobstate", JobState)
        rospy.spin()


    def graph(self, stability):
        print("callback")

        start = rospy.Time.now()
        req = JobStateRequest(trigger="get state")

        res = self.job_state(req)

        tcur  = rospy.Time.now()
        print("service call time %f [msec]" %((tcur.to_sec() - start.to_sec()) * 1000))

        # print(res.state)
        if res.state == "move trolley":
            print(stability.data)
            self.stability_list.append(stability.data)

        tcur  = rospy.Time.now()
        print("callback time %f [msec]" %((tcur.to_sec() - start.to_sec()) * 1000))


    # def graph(self, event):
    #     plt.plot(self.stability_list, label="stability")
    #     plt.pause(0.01)
    #     plt.cla()


if __name__ == "__main__":
    a = graph_stability()
